<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:items="clr-namespace:FlowsheetEditorControl.Items">


    <DataTemplate x:Key="BoxConnector" DataType="{x:Type items:Connector}">
        <Rectangle Name="connectorIcon" Stroke="Red" Fill="White" Width="10" Height="10">
            <Rectangle.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"></TextBlock>
                        <TextBlock Text="{Binding Type}"></TextBlock>
                    </StackPanel>
                </ToolTip>
            </Rectangle.ToolTip>
        </Rectangle>
        <DataTemplate.Triggers>
            <Trigger SourceName="connectorIcon"  Property="IsMouseOver" Value="True">
                <Setter TargetName="connectorIcon" Property="Stroke" Value="Blue"></Setter>
            </Trigger>
            <DataTrigger Binding="{Binding IsConnected}" Value="true">
                <Setter TargetName="connectorIcon" Property="Stroke" Value="Black"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="NozzleLeftConnector" DataType="{x:Type items:Connector}">
        <StackPanel Orientation="Horizontal">
            <Rectangle Stroke="Gray" Fill="Gray" Width="5" Height="20" Margin="-5,-5,0,0"></Rectangle>
            <Rectangle Name="connectorIcon" Stroke="Gray" Fill="Gray" Width="10" Height="10" Margin="0,-5,0,0" VerticalAlignment="Center"></Rectangle>
            <StackPanel.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"></TextBlock>
                        <TextBlock Text="{Binding Type}"></TextBlock>
                    </StackPanel>
                </ToolTip>
            </StackPanel.ToolTip>

        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="connectorIcon"  Property="IsMouseOver" Value="True">
                <Setter TargetName="connectorIcon" Property="Stroke" Value="Blue"></Setter>
            </Trigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="NozzleRightConnector" DataType="{x:Type items:Connector}">
        <StackPanel Orientation="Horizontal">

            <Rectangle Name="connectorIcon" Stroke="Gray" Fill="Gray" Width="10" Height="10" Margin="0,-5,0,0" VerticalAlignment="Center"></Rectangle>
            <Rectangle Stroke="Gray" Fill="Gray" Width="5" Height="20" Margin="0,-5,0,0"></Rectangle>
            <StackPanel.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"></TextBlock>
                        <TextBlock Text="{Binding Type}"></TextBlock>
                    </StackPanel>
                </ToolTip>
            </StackPanel.ToolTip>

        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="connectorIcon"  Property="IsMouseOver" Value="True">
                <Setter TargetName="connectorIcon" Property="Stroke" Value="Blue"></Setter>
            </Trigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="NozzleBottomConnector" DataType="{x:Type items:Connector}">
        <StackPanel>

            <Rectangle Name="connectorIcon" Stroke="Gray" Fill="Gray" Width="10" Height="10" Margin="-5,0,0,0" HorizontalAlignment="Center"></Rectangle>
            <Rectangle Stroke="Gray" Fill="Gray" Width="20" Height="5" Margin="-5,0,0,0"></Rectangle>
            <StackPanel.ToolTip>
                <ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Binding Name}"></TextBlock>
                        <TextBlock Text="{Binding Type}"></TextBlock>
                    </StackPanel>
                </ToolTip>
            </StackPanel.ToolTip>

        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="connectorIcon"  Property="IsMouseOver" Value="True">
                <Setter TargetName="connectorIcon" Property="Stroke" Value="Blue"></Setter>
            </Trigger>

        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="BlockTemplate" DataType="{x:Type items:VisualUnit}">
        <Rectangle Stroke="{Binding BorderColor}" StrokeThickness="2" Fill="{Binding FillColor}" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left"></Rectangle>
    </DataTemplate>
    <DataTemplate x:Key="ThermodynamicsTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle Stroke="Black" StrokeThickness="2" Fill="GhostWhite" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">

            </Rectangle>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="THERMO"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ScriptTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle Stroke="Black" StrokeThickness="2" Fill="GhostWhite" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">

            </Rectangle>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="SCRIPT"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MixerTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid Width="{Binding Width}" Height="{Binding Height}"  >
            <Border CornerRadius="20,20,20,20" BorderBrush="{Binding BorderColor}" Background="{Binding FillColor}" BorderThickness="2"  SnapsToDevicePixels="True"></Border>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  FontSize="16" Text="M"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SplitterTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid Width="{Binding Width}" Height="{Binding Height}"  >
            <Border CornerRadius="20,20,20,20" BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}"  SnapsToDevicePixels="True"></Border>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"  FontSize="16" Text="S"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TwoPhaseFlashTemplate" DataType="{x:Type items:VisualUnit}">
        <!--<Rectangle RadiusX="25" RadiusY="25" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
        </Rectangle>-->
        <Grid Width="{Binding Width}" Height="{Binding Height}">
            <Border CornerRadius="20,20,20,20" BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}"  SnapsToDevicePixels="True"></Border>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Text="F"></TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="HeaterTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle RadiusX="20" RadiusY="20" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
            </Rectangle>
            <Path Stroke="{Binding BorderColor}" StrokeThickness="2"   Data="M 0 20 L 10 20 L 20 5 L 20 35 L 30 20 L 40 20" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkRed" FontSize="16" Text="H"></TextBlock>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="CoolerTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle RadiusX="20" RadiusY="20" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
            </Rectangle>
            <Path Stroke="{Binding BorderColor}" StrokeThickness="2"   Data="M 0 20 L 10 20 L 20 5 L 20 35 L 30 20 L 40 20" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkBlue" FontSize="16" Text="C"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PIAdapterTemplate" DataType="{x:Type items:VisualUnit}">
        <Expander Header="{Binding Name}" IsExpanded="True" BorderBrush="{Binding BorderColor}" Background="{Binding FillColor}">
            <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}" MinWidth="{Binding Width}" MinHeight="{Binding Height}"  HorizontalAlignment="Left" SnapsToDevicePixels="True">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="5">
                        <TextBlock VerticalAlignment="Center" Text="Time Stamp: "></TextBlock>
                        <TextBox VerticalAlignment="Center" Text="{Binding CodeProvider.TimeStamp, UpdateSourceTrigger=LostFocus}" Width="150"></TextBox>
                        <Button  Margin="10,0,0,0" Command="{Binding CodeProvider.SetTimeToNowCommand}">Now</Button>
                        <Button Margin="10,0,0,0" Command="{Binding CodeProvider.UpdateCommand}">Update</Button>
                        <Button Margin="10,0,0,0" Command="{Binding CodeProvider.WriteValuesCommand}">Write</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Bottom" Margin="5">
                        <Button  Margin="10,0,0,0" Command="{Binding CodeProvider.AddHoursCommand}" CommandParameter="-24">-1d</Button>
                        <Button Margin="10,0,0,0" Command="{Binding CodeProvider.AddHoursCommand}" CommandParameter="-1">-1h</Button>                        
                        <Button Margin="10,0,0,0" Command="{Binding CodeProvider.AddHoursCommand}" CommandParameter="1">+1h</Button>
                        <Button  Margin="10,0,0,0" Command="{Binding CodeProvider.AddHoursCommand}" CommandParameter="24">+1d</Button>
                        
                    </StackPanel>
                    <DataGrid ItemsSource="{Binding CodeProvider.Variables}" CanUserAddRows="True" CanUserDeleteRows="True" Margin="5,20,5,5" AutoGenerateColumns="False">
                        <DataGrid.Resources>
                            <Style TargetType="DataGridCell">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                                <Setter Property="TextElement.FontWeight" Value="Normal"></Setter>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Server" Binding="{Binding Server}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Tag" Binding="{Binding Tag}"></DataGridTextColumn>
                            <DataGridTextColumn Header="PI Value" Binding="{Binding PiValue, StringFormat=G4}"></DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Factor" Binding="{Binding Factor}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Offset" Binding="{Binding Offset}"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="Block" Binding="{Binding Block}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Variable" Binding="{Binding Variable}" ></DataGridTextColumn>
                            <DataGridTextColumn Header="Value" Binding="{Binding Value, StringFormat=G4}"></DataGridTextColumn>
                            <!--<DataGridTextColumn Header="Format" Binding="{Binding FormatString}"></DataGridTextColumn>-->
                            <DataGridTextColumn Header="Unit" Binding="{Binding Unit}"></DataGridTextColumn>
                            <!--<DataGridCheckBoxColumn Header="Fixed" Binding="{Binding IsFixed}"></DataGridCheckBoxColumn>-->
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </Border>
        </Expander>

    </DataTemplate>

    <DataTemplate x:Key="SpreadsheetTemplate" DataType="{x:Type items:VisualUnit}">
        <Expander Header="{Binding Name}" IsExpanded="True" BorderBrush="{Binding BorderColor}" Background="{Binding FillColor}">
            <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}" MinWidth="{Binding Width}" MinHeight="{Binding Height}"  HorizontalAlignment="Left" SnapsToDevicePixels="True">

                <DataGrid ItemsSource="{Binding CodeProvider.Variables}" CanUserAddRows="True" CanUserDeleteRows="True" Margin="5,20,5,20" AutoGenerateColumns="False">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridCell">
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Margin" Value="5,0,5,0" />
                            <Setter Property="TextElement.FontWeight" Value="Normal"></Setter>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Block" Binding="{Binding Block}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Variable" Binding="{Binding Variable}" ></DataGridTextColumn>
                        <DataGridTextColumn Header="Value" Binding="{Binding FormattedValue}"></DataGridTextColumn>
                        <!--<DataGridTextColumn Header="Format" Binding="{Binding FormatString}"></DataGridTextColumn>-->
                        <DataGridTextColumn Header="Unit" Binding="{Binding Unit}"></DataGridTextColumn>
                        <!--<DataGridCheckBoxColumn Header="Fixed" Binding="{Binding IsFixed}"></DataGridCheckBoxColumn>-->
                    </DataGrid.Columns>
                </DataGrid>

            </Border>
        </Expander>

    </DataTemplate>

    <DataTemplate x:Key="StreamTableTemplate" DataType="{x:Type items:VisualUnit}">
        <Expander Header="{Binding Model.Name}" IsExpanded="True" BorderBrush="{Binding BorderColor}" Background="{Binding FillColor}">
            <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left" SnapsToDevicePixels="True">
                <DataGrid ItemsSource="{Binding Model.StreamTableView}" CanUserSortColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"  IsReadOnly="True" CanUserReorderColumns="False"  Margin="5"  HeadersVisibility="Column" ClipboardCopyMode="IncludeHeader" Background="White">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridCell">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="Margin" Value="5,0,5,0" />
                            <Setter Property="TextElement.FontWeight" Value="Normal"></Setter>
                        </Style>
                    </DataGrid.Resources>
                </DataGrid>
            </Border>
        </Expander>
    </DataTemplate>
    

    <DataTemplate x:Key="ButtonTemplate" DataType="{x:Type items:VisualUnit}">
        <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}" MinWidth="{Binding Width}" MinHeight="{Binding Height}"  HorizontalAlignment="Left" SnapsToDevicePixels="True">
            <Button Content="{Binding CodeProvider.ButtonLabel}" Command="{Binding CodeProvider.ButtonClickCommand}" Margin="5,20,5,20" MinHeight="20" Style="{x:Null}"></Button>
        </Border>
    </DataTemplate>

    <!--<DataTemplate x:Key="EquationTemplate" DataType="{x:Type items:VisualUnit}">
        <Border CornerRadius="5" BorderThickness="1" BorderBrush="{Binding BorderColor}" Background="{Binding FillColor}" >
            <Expander Header="{Binding Name}" IsExpanded="True" Margin="5" >
                <Border BorderThickness="2" Background="{Binding FillColor}" MinWidth="{Binding Width}" MinHeight="{Binding Height}"  HorizontalAlignment="Center" SnapsToDevicePixels="True"  Margin="15,5,15,5">
                    <DockPanel>
                        <CheckBox DockPanel.Dock="Right" IsChecked="{Binding CodeProvider.IsEnabled}" VerticalAlignment="Center"></CheckBox>
                        <common:EquationRenderControl DockPanel.Dock="Left" DataContext="{Binding CodeProvider.Equation}"></common:EquationRenderControl>

                    </DockPanel>
                </Border>
            </Expander>
        </Border>
    </DataTemplate>-->

    <DataTemplate x:Key="VariableTemplate" DataType="{x:Type items:VisualUnit}">
        <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}" MinWidth="40" Height="40"  HorizontalAlignment="Left" SnapsToDevicePixels="True">
            <Grid>
                <StackPanel Name="EditingPanel" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="5,5,20,5" >
                    <!--<ComboBox Style="{x:Null}"  MinWidth="50" VerticalAlignment="Center" SelectedItem="{Binding CodeProvider.Unit}" ItemsSource="{Binding CodeProvider.AvailableProcessUnits}"></ComboBox>-->

                    <!--<TextBlock Height="20" MinWidth="50" VerticalAlignment="Center" Text="{Binding CodeProvider.Unit}"></TextBlock>-->
                    <!--<TextBlock  VerticalAlignment="Center" Text="."></TextBlock>-->
                    <!--<ComboBox Style="{x:Null}"  MinWidth="50" VerticalAlignment="Center" SelectedItem="{Binding CodeProvider.Variable}" ItemsSource="{Binding CodeProvider.AvailableVariables}"></ComboBox>-->
                    <TextBox  VerticalAlignment="Center" MinWidth="75" Text="{Binding CodeProvider.VariableFullname, UpdateSourceTrigger=LostFocus}" Margin="2,0,2,0"></TextBox>
                    <!--<TextBlock Height="20"  MinWidth="50" VerticalAlignment="Center" Text="{Binding CodeProvider.Variable}"></TextBlock>-->
                    <TextBlock  VerticalAlignment="Center" Text="=" Margin="2,0,2,0"></TextBlock>

                    <TextBox Style="{x:Null}" MinWidth="25"  VerticalAlignment="Center" Text="{Binding CodeProvider.Value, UpdateSourceTrigger=LostFocus}"></TextBox>
                    <TextBlock Style="{x:Null}"  MinWidth="50" VerticalAlignment="Center" Text="{Binding CodeProvider.Uom}" Margin="0,0,5,0"></TextBlock>

                </StackPanel>
                <StackPanel Name="ReadOnlyPanel" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="5,5,20,5" >
                    <StackPanel Orientation="Horizontal" Name="LabelPanel">
                        <!--<CheckBox VerticalAlignment="Center" IsChecked="{Binding CodeProvider.IsBound}" IsEnabled="False"></CheckBox>-->
                        <TextBlock  VerticalAlignment="Center" Text="{Binding CodeProvider.Unit}"></TextBlock>
                        <TextBlock  VerticalAlignment="Center" Text="."></TextBlock>
                        <TextBlock  VerticalAlignment="Center" Text="{Binding CodeProvider.Variable}"></TextBlock>
                        <TextBlock  VerticalAlignment="Center" Text="=" Margin="2,0,2,0"></TextBlock>
                    </StackPanel>
                    <TextBlock Style="{x:Null}"  VerticalAlignment="Center" Text="{Binding CodeProvider.Value, StringFormat=G6}" Margin="0,0,5,0"></TextBlock>
                    <TextBlock Style="{x:Null}"  VerticalAlignment="Center" Text="{Binding CodeProvider.Uom}" Margin="0,0,5,0"></TextBlock>
                </StackPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                <Setter TargetName="EditingPanel" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="ReadOnlyPanel" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="false">
                <Setter TargetName="EditingPanel" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="ReadOnlyPanel" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding CodeProvider.ShowLabel}" Value="False">
                <Setter TargetName="LabelPanel" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>



    <DataTemplate x:Key="TextTemplate" DataType="{x:Type items:VisualUnit}">
        <Border BorderBrush="{Binding BorderColor}" BorderThickness="2" Background="{Binding FillColor}"  Width="{Binding Width}" MinHeight="{Binding Height}" SnapsToDevicePixels="True">
            <TextBlock Margin ="5" HorizontalAlignment="{Binding Model.HorizontalTextAlignment}" VerticalAlignment="{Binding Model.VerticalTextAlignment}" FontSize="{Binding Model.FontSize}" Text="{Binding Model.Text}" Foreground="{Binding Model.FontColor,FallbackValue=Black}" TextWrapping="WrapWithOverflow" ></TextBlock>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="StreamTemplate" DataType="{x:Type items:VisualUnit}">
        <Path Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2"   Data="M 0 10 H 30 V 0 L 50 20 L 30 40 V 30 H 0 V 10" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
    </DataTemplate>



    <DataTemplate x:Key="VesselTemplate" DataType="{x:Type items:VisualUnit}">
        <Rectangle RadiusX="15" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
        </Rectangle>
    </DataTemplate>

    <DataTemplate x:Key="HorizontalVesselTemplate" DataType="{x:Type items:VisualUnit}">
        <Rectangle RadiusX="10" RadiusY="20" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
        </Rectangle>
    </DataTemplate>


    <DataTemplate x:Key="ThreePhaseFlashTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle RadiusX="15" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
            </Rectangle>
            <Border CornerRadius="0,0,15,15" Margin="0,25,0,0" Background="Yellow" Width="{Binding Width}"  HorizontalAlignment="Left">
            </Border>
            <Border CornerRadius="0,0,15,15" Margin="0,50,0,0" Background="Blue" Width="{Binding Width}"  HorizontalAlignment="Left">
            </Border>
            <Rectangle Fill="Transparent" RadiusX="15" RadiusY="15" Stroke="{Binding BorderColor}" StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
            </Rectangle>
        </Grid>

    </DataTemplate>





    <DataTemplate x:Key="ValveTemplate" DataType="{x:Type items:VisualUnit}">
        <Path Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2"   Data="M 0 0 V 40 L 40 0 V 40 L 0  0" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" />
    </DataTemplate>

    <DataTemplate x:Key="PumpTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" Width="25" Height="25" VerticalAlignment="Top"  HorizontalAlignment="Right">
            </Rectangle>

            <StackPanel>
                <Rectangle RadiusX="30" RadiusY="30"  Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
                </Rectangle>
                <Rectangle Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" Width="{Binding Width}" Height="5"  HorizontalAlignment="Left">
                </Rectangle>

            </StackPanel>


        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CompressorTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid>
            <Rectangle RadiusX="25" RadiusY="25" Stroke="Black" StrokeThickness="2" Width="{Binding Width}" Height="{Binding Height}"  HorizontalAlignment="Left">
                <Rectangle.Fill>
                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="Silver" Offset="0"/>
                        <GradientStop Color="White" Offset="0.5"/>
                        <GradientStop Color="Silver" Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Viewbox >
                <Grid Margin="7" >
                    <Line X1="0" Y1="0"  X2="42" Y2="10" Stroke="Black"   />
                    <Line X1="42" Y1="10"  X2="42" Y2="20" Stroke="Transparent"   />
                    <Line X1="42" Y1="20"  X2="0"  Y2="30" Stroke="Black" />
                </Grid>
            </Viewbox>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="HeatExchangerTemplate" DataType="{x:Type items:VisualUnit}">
        <Viewbox Width="{Binding Width}" Height="{Binding Height}" Stretch="Fill">
            <Grid>
                <Rectangle RadiusX="15" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2"   Width="{Binding Width}" Height="{Binding Height}" HorizontalAlignment="Left">

                </Rectangle>

                <Rectangle Margin="25,0,25,0" Stroke="{Binding BorderColor}" StrokeThickness="2"    HorizontalAlignment="Stretch">
                    <Rectangle.Fill>
                        <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0 0.05">
                            <GradientStop Offset="0.5" Color="{Binding BorderColor}"/>
                            <GradientStop Offset="0.5" Color="Transparent"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>

            </Grid>
        </Viewbox>
    </DataTemplate>
    <DataTemplate x:Key="VerticalHeatExchangerTemplate" DataType="{x:Type items:VisualUnit}">
        <Viewbox Width="{Binding Width}" Height="{Binding Height}" Stretch="Fill">
            <Grid>
                <Rectangle RadiusX="15" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}"  StrokeThickness="2"   Width="{Binding Width}" Height="{Binding Height}" HorizontalAlignment="Left">

                </Rectangle>

                <Rectangle Margin="0,20,0,20" Stroke="{Binding BorderColor}" StrokeThickness="2"    HorizontalAlignment="Stretch">
                    <Rectangle.Fill>
                        <LinearGradientBrush SpreadMethod="Reflect" StartPoint="0 0" EndPoint="0.05 0">
                            <GradientStop Offset="0.5" Color="{Binding BorderColor}"/>
                            <GradientStop Offset="0.5" Color="Transparent"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>

            </Grid>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="ColumnTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid  Width="{Binding Width}" Height="{Binding Height}" >
            <Rectangle Margin="25,0,0,0" Width="40" Height="40" StrokeThickness="3" Stroke="{Binding BorderColor}" VerticalAlignment="Top" HorizontalAlignment="Left"></Rectangle>

            <Rectangle Margin="25,0,0,0" Width="40" Height="40" StrokeThickness="3" Stroke="{Binding BorderColor}" VerticalAlignment="Bottom" HorizontalAlignment="Left"></Rectangle>

            <Rectangle  Margin="55,10,0,0" RadiusX="10" RadiusY="10" Width="20" Height="20" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" VerticalAlignment="Top" HorizontalAlignment="Left"></Rectangle>
            <Rectangle  Margin="55,0,0,10" RadiusX="10" RadiusY="10" Width="20" Height="20" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" VerticalAlignment="Bottom" HorizontalAlignment="Left"></Rectangle>


            <Grid Width="50" Height="200" HorizontalAlignment="Left">
                <Grid.Resources>
                    <VisualBrush 
                          x:Key="HatchBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Canvas>
                                <Rectangle Fill="White" Width="10" Height="10" />
                                <Path Stroke="{Binding BorderColor}" Data="M 0 0 l 10 10" />
                                <Path Stroke="{Binding BorderColor}" Data="M 0 10 l 10 -10" />
                            </Canvas>
                        </VisualBrush.Visual>
                    </VisualBrush>
                    <VisualBrush 
                          x:Key="TrayBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Canvas>
                                <Rectangle Fill="{Binding FillColor}" Width="10" Height="10" />
                                <Path Stroke="{Binding BorderColor}" Data="M 0 5 l 10 5" />
                            </Canvas>
                        </VisualBrush.Visual>
                    </VisualBrush>
                    <VisualBrush 
                          x:Key="PackingBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Canvas>
                                <Rectangle Fill="{Binding FillColor}" Width="10" Height="10" />
                                <Path Stroke="{Binding BorderColor}" Data="M 0 0 l 10 10" />
                            </Canvas>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Grid.Resources>

                <Rectangle RadiusX="25" RadiusY="25" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2"  VerticalAlignment="Stretch"  HorizontalAlignment="Stretch">
                </Rectangle>
                <Rectangle Margin="0,25,0,25"  Height="60" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2" VerticalAlignment="Top"  HorizontalAlignment="Stretch"></Rectangle>

                <Rectangle Margin="0,115,0,25"  Height="60" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2" VerticalAlignment="Top"  HorizontalAlignment="Stretch"></Rectangle>


            </Grid>

        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="RecycleBreakerTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid  Width="{Binding Width}" Height="{Binding Height}">
            <Rectangle RadiusX="10" RadiusY="10" HorizontalAlignment="Stretch" Stroke="{Binding BorderColor}" StrokeThickness="2" Fill="{Binding FillColor}"  ></Rectangle>
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="OrangeRed" Text="Recycle"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ColumnSectionTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid  Width="{Binding Width}" Height="{Binding Height}" >

            <Grid.Resources>
                <VisualBrush 
                          x:Key="HatchBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                        <Canvas>
                            <Rectangle Fill="White" Width="10" Height="10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 0 l 10 10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 10 l 10 -10" />
                        </Canvas>
                    </VisualBrush.Visual>
                </VisualBrush>
                <VisualBrush 
                          x:Key="TrayBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                        <Canvas>
                            <Rectangle Fill="{Binding FillColor}" Width="10" Height="10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 5 l 10 5" />
                        </Canvas>
                    </VisualBrush.Visual>
                </VisualBrush>
                <VisualBrush 
                          x:Key="PackingBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                        <Canvas>
                            <Rectangle Fill="{Binding FillColor}" Width="10" Height="10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 0 l 10 10" />
                        </Canvas>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Resources>

            <Rectangle RadiusX="30" RadiusY="30" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2"  VerticalAlignment="Stretch"  HorizontalAlignment="Stretch">
            </Rectangle>
            <Rectangle Margin="0,30,0,30" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"></Rectangle>

        </Grid>

    </DataTemplate>


    <DataTemplate x:Key="RateBasedSectionTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid  Width="{Binding Width}" Height="{Binding Height}" >
            <Grid.Resources>
                <VisualBrush 
                          x:Key="HatchBrush" 
                          TileMode="Tile" Viewport="0,0,10,10" 
                          ViewportUnits="Absolute" Viewbox="0,0,10,10"    
                          ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                        <Canvas>
                            <Rectangle Fill="White" Width="10" Height="10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 0 l 10 10" />
                            <Path Stroke="{Binding BorderColor}" Data="M 0 10 l 10 -10" />
                        </Canvas>
                    </VisualBrush.Visual>
                </VisualBrush>               
            </Grid.Resources>


            <Rectangle RadiusX="30" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2"  VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"></Rectangle>
            
            <!--<Rectangle Margin="0,35,0,30" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"></Rectangle>-->

            <Ellipse HorizontalAlignment="Stretch" Height="30" VerticalAlignment="Top" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" ></Ellipse>
            
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="FeedStageTemplate" DataType="{x:Type items:VisualUnit}">
        <Grid  Width="{Binding Width}" Height="{Binding Height}" >
        

            <Rectangle RadiusX="30" RadiusY="15" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2"  VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"></Rectangle>

            <!--<Rectangle Margin="0,35,0,30" Stroke="{Binding BorderColor}" Fill="{StaticResource HatchBrush}" StrokeThickness="2" VerticalAlignment="Stretch"  HorizontalAlignment="Stretch"></Rectangle>-->

            <Ellipse HorizontalAlignment="Stretch" Height="30" VerticalAlignment="Top" Stroke="{Binding BorderColor}" Fill="{Binding FillColor}" StrokeThickness="2" ></Ellipse>

        </Grid>

    </DataTemplate>


    <DataTemplate DataType="{x:Type items:ToolboxItem}">
        <!--<Border   Margin="5" BorderBrush="DimGray" Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1">-->
        <StackPanel Orientation="Horizontal" ToolTip="{Binding ModelName}">
            <Viewbox   Stretch="Fill"  Margin="5" Width="25" Height="25">
                <ContentControl Content="{Binding }">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource BlockTemplate}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Feed">
                                    <Setter Property="ContentTemplate" Value="{StaticResource StreamTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Product">
                                    <Setter Property="ContentTemplate" Value="{StaticResource StreamTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Block">
                                    <Setter Property="ContentTemplate" Value="{StaticResource BlockTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Vessel">
                                    <Setter Property="ContentTemplate" Value="{StaticResource VesselTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Column">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ColumnTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="ColumnSection">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ColumnSectionTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="RateBasedSection">
                                    <Setter Property="ContentTemplate" Value="{StaticResource RateBasedSectionTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="FeedStage">
                                    <Setter Property="ContentTemplate" Value="{StaticResource FeedStageTemplate}" />
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Stream">
                                    <Setter Property="ContentTemplate" Value="{StaticResource StreamTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="TwoPhaseFlash">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TwoPhaseFlashTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="ThreePhaseFlash">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ThreePhaseFlashTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Decanter">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ThreePhaseFlashTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Mixer">
                                    <Setter Property="ContentTemplate" Value="{StaticResource MixerTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Splitter">
                                    <Setter Property="ContentTemplate" Value="{StaticResource SplitterTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="HeatExchanger">
                                    <Setter Property="ContentTemplate" Value="{StaticResource HeatExchangerTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="FallingFilm">
                                    <Setter Property="ContentTemplate" Value="{StaticResource VerticalHeatExchangerTemplate}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Heater">
                                    <Setter Property="ContentTemplate" Value="{StaticResource HeaterTemplate}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Cooler">
                                    <Setter Property="ContentTemplate" Value="{StaticResource CoolerTemplate}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Pump">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PumpTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Valve">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ValveTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Compressor">
                                    <Setter Property="ContentTemplate" Value="{StaticResource CompressorTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Thermodynamics">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ThermodynamicsTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Script">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ScriptTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Text">
                                    <Setter Property="ContentTemplate" Value="{StaticResource TextTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Button">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ButtonTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Spreadsheet">
                                    <Setter Property="ContentTemplate" Value="{StaticResource SpreadsheetTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="StreamTable">
                                    <Setter Property="ContentTemplate" Value="{StaticResource StreamTableTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Breaker">
                                    <Setter Property="ContentTemplate" Value="{StaticResource RecycleBreakerTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Variable">
                                    <Setter Property="ContentTemplate" Value="{StaticResource VariableTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="Equation">
                                    <Setter Property="ContentTemplate" Value="{StaticResource EquationTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DisplayIcon}" Value="PIAdapter">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PIAdapterTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Viewbox>
            <!--<TextBlock Text="{Binding ModelName}" TextAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="16"></TextBlock>-->

        </StackPanel>
        <!--</Border>-->
    </DataTemplate>

</ResourceDictionary>